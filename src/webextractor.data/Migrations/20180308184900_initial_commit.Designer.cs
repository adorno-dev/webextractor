// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebExtractor.Data.EntityFramework;

namespace webextractor.data.Migrations
{
    [DbContext(typeof(WebExtractorContext))]
    [Migration("20180308184900_initial_commit")]
    partial class initial_commit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("WebExtractor.Domain.Models.Expression", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("LinkId")
                        .HasColumnName("link_id");

                    b.Property<int>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("LinkId");

                    b.ToTable("Expression");
                });

            modelBuilder.Entity("WebExtractor.Domain.Models.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("SiteId")
                        .HasColumnName("site_id");

                    b.Property<string>("Url")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("WebExtractor.Domain.Models.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Domain")
                        .HasColumnName("domain");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("WebExtractor.Domain.Models.Expression", b =>
                {
                    b.HasOne("WebExtractor.Domain.Models.Link", "Link")
                        .WithMany("Expressions")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebExtractor.Domain.Models.Link", b =>
                {
                    b.HasOne("WebExtractor.Domain.Models.Site", "Site")
                        .WithMany("Links")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
